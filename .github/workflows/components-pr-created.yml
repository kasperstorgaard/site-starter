name: "Components: PR Created"

on:
  pull_request:
    types: [opened, reopened, ready_for_review]
    paths:
      - 'components/**'

defaults:
  run:
    working-directory: components

jobs:
  test:
    strategy:
      max-parallel: 1
      fail-fast: true
      matrix:
        include:
          - device: mobile
            browser: chromium
          - device: mobile
            browser: webkit
          - device: desktop
            browser: chromium
          - device: desktop
            browser: webkit
          - device: desktop
            browser: firefox
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: 16.x
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install node modules
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Install playwright
        run: npx playwright install --with-deps ${{ matrix.browser }}
      - name: Wait for Netlify deployment
        uses: jakepartusch/wait-for-netlify-action@v1.2
        id: waitForDeployment
        with:
          site_name: "capable-stardust-70089d"
          max_timeout: 360 # 6 Minutes
      - name: Run Playwright tests
        run: npx -p @playwright/test playwright test --project "${{ matrix.device }} ${{ matrix.browser }}"
        env:
          PLAYWRIGHT_TEST_BASE_URL: ${{ steps.waitForDeployment.outputs.url }}
      - name: Upload test results on failure
        uses: actions/upload-artifact@v3
        if: ${{ failure() }}
        with:
          name: test-results
          path: components/test-results/
